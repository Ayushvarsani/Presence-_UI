[{"G:\\Final Project\\UI\\src\\index.js":"1","G:\\Final Project\\UI\\src\\reportWebVitals.js":"2","G:\\Final Project\\UI\\src\\App.js":"3","G:\\Final Project\\UI\\src\\store.jsx":"4","G:\\Final Project\\UI\\src\\screens\\addStudentView.jsx":"5","G:\\Final Project\\UI\\src\\screens\\homeView.jsx":"6","G:\\Final Project\\UI\\src\\screens\\studentDetailsView.jsx":"7","G:\\Final Project\\UI\\src\\screens\\profileView.jsx":"8","G:\\Final Project\\UI\\src\\screens\\aboutUs.jsx":"9","G:\\Final Project\\UI\\src\\screens\\analysisView.jsx":"10","G:\\Final Project\\UI\\src\\components\\footer.jsx":"11","G:\\Final Project\\UI\\src\\screens\\userEditView.jsx":"12","G:\\Final Project\\UI\\src\\screens\\userListView.jsx":"13","G:\\Final Project\\UI\\src\\screens\\Authentication Screens\\RegisterView.jsx":"14","G:\\Final Project\\UI\\src\\actions\\studentActions.jsx":"15","G:\\Final Project\\UI\\src\\reducers\\studentsReducer.jsx":"16","G:\\Final Project\\UI\\src\\screens\\attendanceView.jsx":"17","G:\\Final Project\\UI\\src\\reducers\\attendanceReducer.jsx":"18","G:\\Final Project\\UI\\src\\components\\header.jsx":"19","G:\\Final Project\\UI\\src\\reducers\\userReducers.jsx":"20","G:\\Final Project\\UI\\src\\screens\\Authentication Screens\\LoginView.jsx":"21","G:\\Final Project\\UI\\src\\components\\message.jsx":"22","G:\\Final Project\\UI\\src\\components\\loader.jsx":"23","G:\\Final Project\\UI\\src\\components\\formContainer.jsx":"24","G:\\Final Project\\UI\\src\\actions\\userActions.jsx":"25","G:\\Final Project\\UI\\src\\components\\paginate.jsx":"26","G:\\Final Project\\UI\\src\\screens\\studentTableView.jsx":"27","G:\\Final Project\\UI\\src\\actions\\attendanceActions.jsx":"28","G:\\Final Project\\UI\\src\\components\\attendanceTable.jsx":"29","G:\\Final Project\\UI\\src\\components\\analysisComponent.jsx":"30","G:\\Final Project\\UI\\src\\components\\searchBox.jsx":"31","G:\\Final Project\\UI\\src\\components\\student.jsx":"32","G:\\Final Project\\UI\\src\\constants\\studentConstant.jsx":"33","G:\\Final Project\\UI\\src\\constants\\attendanceConstant.jsx":"34","G:\\Final Project\\UI\\src\\constants\\userConstants.jsx":"35","G:\\Final Project\\UI\\src\\components\\attendanceTableComponent.jsx":"36"},{"size":595,"mtime":1705756918630,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1696954266000,"results":"39","hashOfConfig":"38"},{"size":2357,"mtime":1705757054047,"results":"40","hashOfConfig":"38"},{"size":1760,"mtime":1696954266000,"results":"41","hashOfConfig":"38"},{"size":7166,"mtime":1698156256000,"results":"42","hashOfConfig":"38"},{"size":2798,"mtime":1698139004000,"results":"43","hashOfConfig":"38"},{"size":6033,"mtime":1698139112000,"results":"44","hashOfConfig":"38"},{"size":3635,"mtime":1696954268000,"results":"45","hashOfConfig":"38"},{"size":3719,"mtime":1705754506719,"results":"46","hashOfConfig":"38"},{"size":3738,"mtime":1698141538000,"results":"47","hashOfConfig":"38"},{"size":288,"mtime":1696967356000,"results":"48","hashOfConfig":"38"},{"size":3182,"mtime":1696954268000,"results":"49","hashOfConfig":"38"},{"size":2730,"mtime":1696954268000,"results":"50","hashOfConfig":"38"},{"size":3185,"mtime":1698143542000,"results":"51","hashOfConfig":"38"},{"size":4652,"mtime":1697899734000,"results":"52","hashOfConfig":"38"},{"size":3180,"mtime":1696954268000,"results":"53","hashOfConfig":"38"},{"size":1128,"mtime":1698126806000,"results":"54","hashOfConfig":"38"},{"size":1789,"mtime":1696954268000,"results":"55","hashOfConfig":"38"},{"size":2795,"mtime":1698138922000,"results":"56","hashOfConfig":"38"},{"size":3520,"mtime":1696954268000,"results":"57","hashOfConfig":"38"},{"size":2261,"mtime":1698143554000,"results":"58","hashOfConfig":"38"},{"size":236,"mtime":1696954266000,"results":"59","hashOfConfig":"38"},{"size":386,"mtime":1696954266000,"results":"60","hashOfConfig":"38"},{"size":331,"mtime":1696954266000,"results":"61","hashOfConfig":"38"},{"size":6463,"mtime":1696954266000,"results":"62","hashOfConfig":"38"},{"size":743,"mtime":1696954266000,"results":"63","hashOfConfig":"38"},{"size":2414,"mtime":1698509346000,"results":"64","hashOfConfig":"38"},{"size":2462,"mtime":1696954266000,"results":"65","hashOfConfig":"38"},{"size":2085,"mtime":1696954266000,"results":"66","hashOfConfig":"38"},{"size":2656,"mtime":1698141382000,"results":"67","hashOfConfig":"38"},{"size":783,"mtime":1696954268000,"results":"68","hashOfConfig":"38"},{"size":861,"mtime":1696954268000,"results":"69","hashOfConfig":"38"},{"size":1297,"mtime":1696954268000,"results":"70","hashOfConfig":"38"},{"size":859,"mtime":1696954268000,"results":"71","hashOfConfig":"38"},{"size":1502,"mtime":1696954268000,"results":"72","hashOfConfig":"38"},{"size":3477,"mtime":1698127504000,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pnss7o",{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"78"},"G:\\Final Project\\UI\\src\\index.js",[],"G:\\Final Project\\UI\\src\\reportWebVitals.js",[],["158","159"],"G:\\Final Project\\UI\\src\\App.js",[],"G:\\Final Project\\UI\\src\\store.jsx",[],"G:\\Final Project\\UI\\src\\screens\\addStudentView.jsx",[],"G:\\Final Project\\UI\\src\\screens\\homeView.jsx",["160"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Student from \"../components/student\";\nimport Loading from \"../components/loader.jsx\";\nimport Message from \"../components/message.jsx\";\nimport { listStudents } from \"../actions/studentActions\";\nimport Paginate from \"../components/paginate\";\nimport {\n  Row,\n  Col,\n  ButtonGroup,\n  ToggleButton,\n  Container,\n} from \"react-bootstrap\";\nimport StudentsTableView from \"./studentTableView\";\n\nconst HomeView = ({ match, history }) => {\n  const [isGrid, setIsGrid] = useState(true);\n  const keyword = match.params.keyword;\n\n  const pageNumber = match.params.pageNumber || 1;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading: userLoading, userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const studentsList = useSelector((state) => state.studentsList);\n  const { loading, error, students, page, pages } = studentsList;\n\n  useEffect(() => {\n    if (!userLoading && !userInfo) {\n      history.push(\"/login\");\n    }\n    dispatch(listStudents(keyword, pageNumber));\n  }, [keyword, pageNumber]);\n\n  return (\n    <>\n      <>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col xs lg=\"2\"></Col>\n            <Col md=\"auto\">\n              <ButtonGroup toggle>\n                {[\"Grid\", \"Table\"].map((type) => (\n                  <ToggleButton\n                    key={type}\n                    type=\"radio\"\n                    variant=\"secondary\"\n                    name=\"radio\"\n                    value={type}\n                    checked={(isGrid ? \"Grid\" : \"Table\") === type}\n                    onChange={(e) =>\n                      setIsGrid(e.target.value === \"Grid\" ? true : false)\n                    }\n                  >\n                    {type === \"Grid\" ? <> Grid</> : <> Table </>}\n                  </ToggleButton>\n                ))}\n              </ButtonGroup>\n            </Col>\n            <Col xs lg=\"2\"></Col>\n          </Row>\n        </Container>\n      </>\n\n      <div>\n        <h2>Students Details </h2>\n        </div>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : isGrid ? (\n        <>\n          <Row>\n            {students.map((student) => (\n              <Col key={student._id} sm={12} md={6} lg={4} xl={3}>\n                <Student stuentDetails={student} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      ) : (\n        <>\n          <StudentsTableView keyword={keyword} pageNumber={pageNumber} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeView;\n","G:\\Final Project\\UI\\src\\screens\\studentDetailsView.jsx",["161"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Loading from \"../components/loader\";\nimport Message from \"../components/message\";\nimport {\n  getStudentDetails,\n  updateStudent,\n  deleteStudent,\n} from \"../actions/studentActions\";\nimport { STUDENT_UPDATE_RESET } from \"../constants/studentConstant\";\nconst StudentDetailsView = ({ match, history }) => {\n  const [status, setStatus] = useState(\"\");\n  const dispatch = useDispatch();\n  const studentDetails = useSelector((state) => state.studentDetails);\n  const { loading, error, student } = studentDetails;\n  const studentUpdate = useSelector((state) => state.studentUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = studentUpdate;\n  const studentDelete = useSelector((state) => state.studentDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = studentDelete;\n\n  useEffect(() => {\n    if (successDelete) {\n      history.push(\"/\");\n    }\n    if (successUpdate) {\n      dispatch({ type: STUDENT_UPDATE_RESET });\n    }\n    if (!student || !student._id || student._id !== match.params.id) {\n      dispatch(getStudentDetails(match.params.id));\n    }\n    if (student && student._id && !status) {\n      setStatus(student.status);\n    }\n  }, [dispatch, match, successUpdate, successDelete]);\n\n  const navigateToEdit = () => {\n    history.push({\n      pathname: `/student/edit/${student._id}`,\n      state: { studentProps: student },\n    });\n  };\n  const updateStatus = () => {\n    student.status = status;\n    dispatch(updateStudent(student));\n  };\n\n  const deleteStuden = () => {\n    if (window.confirm(\"Are you sure ?\")) {\n      dispatch(deleteStudent(student._id));\n    }\n  };\n  return (\n    <>\n      <Link className=\"btn btn-light\" to=\"/\">\n        Go Back\n      </Link>\n    \n      {loading || loadingUpdate || loadingDelete ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n          {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n          {student && (\n            <Row>\n              <Col md={3} className=\"mt-1\">\n                <Image src={student.image} alt={student.name} fluid  />\n              </Col>\n              <Col md={9} className=\"mt-3\">\n                <Card>\n                  <ListGroup variant=\"flush\">\n\n                    <ListGroup.Item>\n                      <h3>{student.name}</h3>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Phone No</Col>\n                        <Col>{student.contact}</Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Father Contact</Col>\n                        <Col>{student.fatherContact}</Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>City</Col>\n                        <Col>{student.city}</Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Address</Col>\n                        <Col>{student.address}</Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Room No</Col>\n                        <Col> {student.roomNo}</Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Block No</Col>\n                        <Col> {student.blockNo}</Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Status</Col>\n                        <Col>\n                          <Form.Control\n                            size=\"sm\"\n                            as=\"select\"\n                            value={status}\n                            onChange={(e) => setStatus(e.target.value)}\n                          >\n                            {[\"Hostel\", \"Outside\", \"Home\"].map((x) => (\n                              <option key={x} value={x}>\n                                {x}\n                              </option>\n                            ))}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n\n                    <ListGroup.Item>\n                      <Button\n                       className=\"btn btn-success ml-4 my-3\"\n                        onClick={updateStatus}\n                      >\n                        <span>\n                        <i class=\"fas fa-edit\"> </i>\n                        Update\n                        </span>\n                      </Button>\n                      <Button className=\"btn btn-dark ml-4 my-3\" onClick={navigateToEdit} >\n                        <span>\n                          <i className=\"fas fa-edit\"> </i> Edit\n                        </span>\n                      </Button>\n                      <Button className=\"btn btn-danger  ml-4 my-3\" onClick={deleteStuden}>\n                        <span>\n                          <i className=\"fas fa-trash\"> </i> Delete\n                        </span>\n                      </Button>\n\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card>\n              </Col>\n\n            </Row>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default StudentDetailsView;\n","G:\\Final Project\\UI\\src\\screens\\profileView.jsx",[],"G:\\Final Project\\UI\\src\\screens\\aboutUs.jsx",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport FormContainer from \"../components/formContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addStudent, updateStudent } from \"../actions/studentActions\";\nimport Loading from \"../components/loader.jsx\";\nimport Message from \"../components/message.jsx\";\nimport { STUDENT_UPDATE_RESET } from \"../constants/studentConstant\";\nimport Loader from \"../components/loader\";\n\nconst AboutUs = () => {\n\n  return (\n    <>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <div className='about-container'>\n        <h2>About Our Hostel Management System</h2>\n        <p>\n          Welcome to our Hostel Management System, an efficient and user-friendly solution designed to streamline hostel operations and enhance the overall experience for both administrators and residents.\n        </p>\n        <div className=\"images\">\n          <img className=\"img1\" src='https://lh5.googleusercontent.com/p/AF1QipNs2P0zPBrOir6u35OMQ01_WSS2UIpvxhZ0PjI=w900-h1482-p-k-no' style={{ width: 300, height: 300 }}></img>\n          <img className=\"img2\" src='https://www.raiuniversity.edu/wp-content/uploads/Hostel-min.jpg' style={{ width: 300, height: 300 }}></img>\n          <img className=\"img3\" src='https://www.hiusa.org/wp-content/uploads/2020/04/sacramento-dorm-hiusa-1000x550-compressor-1-778x446.jpg' style={{ width: 300, height: 300 }}></img>\n        </div>\n\n        <h3>Mission Statement:</h3>\n        <p>\n          Our mission is to simplify the management of hostels, ensuring a comfortable and secure environment for residents while empowering administrators with the tools they need for effective oversight and control.\n        </p>\n\n        <h3>Key Features:</h3>\n        <ul>\n          <li>Room Allocation: Easily assign and manage room allocations for residents, keeping track of vacancies and occupancy status.</li>\n          <li>Resident Profiles: Maintain comprehensive profiles for each resident, including personal information, contact details, and emergency contacts.</li>\n          <li>Billing and Payments: Simplify billing and payment processes, allowing residents to pay rent and fees online.</li>\n          <li>Attendance Tracking: Keep a record of resident check-ins and check-outs for improved security and attendance monitoring.</li>\n          <li>Communication: Facilitate communication between administrators and residents through announcements, notices, and messaging features.</li>\n          <li>Inventory Management: Manage hostel inventory and supplies efficiently.</li>\n        </ul>\n\n        <h3>Why Choose Our System:</h3>\n        <ul>\n          <li>User-Friendly: Our system is designed with a simple and intuitive interface for ease of use.</li>\n          <li>Cost-Effective: An affordable solution that offers excellent value for money.</li>\n          <li>Customization: Tailor the system to your specific hostel's needs.</li>\n          <li>Customer Support: We provide dedicated customer support to assist you at every step.</li>\n        </ul>\n\n        <h3>Contact Us:</h3>\n        <p>If you have any questions or need assistance, So please Contact Us </p>\n        <ul>\n          <li><b>+91 9879096790</b></li>\n          <li><b>support@Presenceplus.com</b></li>\n        </ul>\n        <b>Thank you for choosing our PRESENCE+</b >\n        {/* <p> We are dedicated to making hostel management hassle-free and efficient for you!</p> */}\n        <br />\n        <h3 class=\"copy-text\">Copyright © 2023 PRESENCE+ - All Rights Reserved. </h3>\n\n      </div>\n    </>\n  );\n};\n\nexport default AboutUs;\n","G:\\Final Project\\UI\\src\\screens\\analysisView.jsx",["179","180"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Button, Modal, Form } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {\n  deleteAttendanceByDate,\n  getAnalysisByDate,\n} from \"../actions/attendanceActions\";\nimport AnalysisComponent from \"../components/analysisComponent\";\nimport Loading from \"../components/loader\";\nimport Message from \"../components/message\";\n\nconst AnalysisView = () => {\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const [days, setDays] = useState(0);\n  const [idList, setIdList] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\n  const { attendance } = attendanceAnalysis;\n  const attendanceDelete = useSelector((state) => state.attendanceDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete,\n  } = attendanceDelete;\n  useEffect(() => {\n    if (attendance) {\n      var temp = idList;\n      Object.entries(attendance.details).map((at) => {\n        temp.push(at[0]);\n      });\n\n      setIdList(temp);\n    } else {\n      dispatch(getAnalysisByDate(startDate.toString().substring(0, 15)));\n    }\n  }, [attendance, dispatch]);\n\n  const changeDate = (date) => {\n    dispatch(getAnalysisByDate(date.toString().substring(0, 15)));\n    setStartDate(date);\n  };\n  const showModal = () => {\n    setModal(true);\n  };\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  const startDelete = () => {\n    setModal(false);\n    dispatch(deleteAttendanceByDate(days));\n  };\n\n  return (\n    <>\n      <Row >\n        <Link to=\"/\" className=\"btn btn-light \">\n          Go Back\n        </Link>\n        {/* <div style={{ height: \"40px\", display: \"flex\" }}> */}\n          <Button className=\"btn btn-danger\"   size=\"sm\" onClick={showModal}>\n            Delete Attendance\n          </Button>\n        {/* </div> */}\n      </Row>\n      {loadingDelete && <Loading />}\n      {errorDelete && <Message variant=\"success\">{errorDelete}</Message>}\n      {successDelete && <Message variant=\"success\">Attendance Deleted</Message>}\n\n      <Col>\n        <Row>\n          <Col>\n            <Row>Analysis for \n              <strong>\n               { \" :- \" + startDate.toISOString().toString().substring(0, 10)}\n              </strong>\n            </Row>\n          </Col>\n          <Col>\n            <DatePicker\n              selected={startDate}\n              onChange={(date) => changeDate(date)}\n            />\n          </Col>\n        </Row>\n        <Modal show={modal} animation={true} onHide={closeModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Enter Number of days before to delete</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"days\">\n                <Form.Label>Enter no of days</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Enter days\"\n                  value={days}\n                  onChange={(e) => setDays(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={closeModal}>\n              Close\n            </Button>\n            <Button variant=\"outline-danger\" onClick={startDelete}>\n              Delete\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {<AnalysisComponent />}\n      </Col>\n    </>\n  );\n};\n\nexport default AnalysisView;\n","G:\\Final Project\\UI\\src\\components\\footer.jsx",["181"],"import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <Container>\n      <Row>\n        {/* <Col className='text-center py-3'>Copyright &copy;NSD Solutions</Col> */}\n      </Row>\n    </Container>\n  )\n}\n\nexport default Footer\n","G:\\Final Project\\UI\\src\\screens\\userEditView.jsx",[],"G:\\Final Project\\UI\\src\\screens\\userListView.jsx",[],"G:\\Final Project\\UI\\src\\screens\\Authentication Screens\\RegisterView.jsx",[],"G:\\Final Project\\UI\\src\\actions\\studentActions.jsx",[],"G:\\Final Project\\UI\\src\\reducers\\studentsReducer.jsx",[],"G:\\Final Project\\UI\\src\\screens\\attendanceView.jsx",[],"G:\\Final Project\\UI\\src\\reducers\\attendanceReducer.jsx",[],"G:\\Final Project\\UI\\src\\components\\header.jsx",["182","183","184"],"import React from \"react\";\nimport { Container, Nav, Navbar,Image, NavDropdown } from \"react-bootstrap\";\nimport { Route } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SearchBox from \"./searchBox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport '../css/header.css';\nimport { Menubar } from 'primereact/menubar';\n        \nconst Header = ({ history }) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n    history.push(\"/login\");\n  };\n  return (\n    <header>\n      \n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n      \n          <LinkContainer to=\"/\">\n            <Navbar.Brand  className=\"ml-3\">\n              Presence+\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse >\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className=\"ml-auto\">\n              <NavDropdown title=\"More\">\n                <LinkContainer to=\"/attendance\">\n                  <NavDropdown.Item>Attendance</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to=\"/addStudent\">\n                  <NavDropdown.Item>Add Student</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to=\"/analysis\">\n                  <NavDropdown.Item>View Analysis</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to=\"/aboutUs\">\n                  <NavDropdown.Item>About Us</NavDropdown.Item>\n                </LinkContainer>\n              </NavDropdown>\n              \n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  {userInfo.isAdmin && (\n                    <LinkContainer to=\"/userList\">\n                      <NavDropdown.Item>Users List</NavDropdown.Item>\n                    </LinkContainer>\n                  )}\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n      </Navbar>\n\n     \n    </header>\n  );\n};\n\nexport default Header;\n","G:\\Final Project\\UI\\src\\reducers\\userReducers.jsx",[],"G:\\Final Project\\UI\\src\\screens\\Authentication Screens\\LoginView.jsx",["185"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../../components/message'\nimport Loader from '../../components/loader'\nimport FormContainer from '../../components/formContainer'\nimport { login } from '../../actions/userActions'\nimport '../../css/Login.css';\nconst LoginView = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <>\n\n      <div className='Login'>\n        <h1>Sign In</h1>\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Sign In\n          </Button>\n        </Form>\n\n        <Row className='py-3'>\n          <Col>\n            New Customer?{' '}\n            <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n              Register\n            </Link>\n          </Col>\n        </Row>\n      </div>\n    </>\n  )\n}\n\nexport default LoginView\n","G:\\Final Project\\UI\\src\\components\\message.jsx",[],"G:\\Final Project\\UI\\src\\components\\loader.jsx",[],"G:\\Final Project\\UI\\src\\components\\formContainer.jsx",[],"G:\\Final Project\\UI\\src\\actions\\userActions.jsx",[],"G:\\Final Project\\UI\\src\\components\\paginate.jsx",[],"G:\\Final Project\\UI\\src\\screens\\studentTableView.jsx",["186"],"import React, { useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport Paginate from \"../components/paginate\";\nimport { listStudents } from \"../actions/studentActions\";\nimport { Link } from \"react-router-dom\";\n\nconst StudentsTableView = ({ keyword, pageNumber }) => {\n  const dispatch = useDispatch();\n\n  const studentsList = useSelector((state) => state.studentsList);\n  const { loading, error, students, page, pages } = studentsList;\n  useEffect(() => {\n    if (!students) {\n      dispatch(listStudents(keyword, pageNumber));\n    }\n  }, [dispatch, keyword, pageNumber]);\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>Stream</th>\n                <th>NAME</th>\n                <th>STATUS</th>\n                <th>CONTACT</th>\n                <th>ROOM NO</th>\n                <th>CITY</th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student) => (\n                <tr key={student._id}>\n                  <td>{student.category}</td>\n                  <td>\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\n                  </td>\n                  <td>\n                    <span\n                      style={{\n                        color:\n                          student.status === \"Outside\"\n                            ? \"red\"\n                            : student.status === \"Home\"\n                              ? \"blue\"\n                              : \"black\",\n                      }}\n                    >\n                      {student.status}\n                    </span>\n                  </td>\n                  <td>\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\n                  </td>\n                  <td>{student.roomNo}</td>\n                  <td>{student.city}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n      \n        </>\n      )}\n    </>\n  );\n};\n\nexport default StudentsTableView;\n","G:\\Final Project\\UI\\src\\actions\\attendanceActions.jsx",[],"G:\\Final Project\\UI\\src\\components\\attendanceTable.jsx",["187","188","189"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loading from \"./loader\";\nimport Message from \"./message\";\nimport AttendanceTableComponent from \"./attendanceTableComponent\";\n\nconst AttendanceTable = ({ roomNo }) => {\n  const dispatch = useDispatch();\n  const [attendanceMap, setAttendanceMap] = useState({});\n\n  const getStudentsByRoomNo = useSelector((state) => state.getStudentsByRoomNo);\n  const { loading, error, students, attendance } = getStudentsByRoomNo;\n  const attendanceDataEnter = useSelector((state) => state.attendanceDataEnter);\n  const {\n    loading: loadingAttendance,\n    error: errorAttendance,\n  } = attendanceDataEnter;\n  useEffect(() => {\n    if (students) {\n      arrangeTable();\n    }\n  }, [dispatch, attendance, attendanceMap, students]);\n\n  const arrangeTable = () => {\n    if (attendance) {\n      var tempMap = attendanceMap;\n      students.map((student) => {\n        if (attendance.data[student._id]) {\n          tempMap[student._id] = attendance.data[student._id];\n        } else {\n          tempMap[student._id] = \"Hostel\";\n        }\n      });\n      setAttendanceMap(attendanceMap);\n    } else {\n      students.map((student) => {\n        var temp = attendanceMap;\n        temp[student._id] = \"Hostel\";\n        setAttendanceMap(temp);\n      });\n    }\n    var temp = attendanceMap;\n    setAttendanceMap(temp);\n  };\n\n  return (\n    <>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading || loadingAttendance ? (\n        <Loading />\n      ) : (\n        <>\n          {errorAttendance && (\n            <Message variant=\"danger\">{errorAttendance}</Message>\n          )}\n          {students && (\n            <>\n              <AttendanceTableComponent\n                students={students}\n                attendanceMap={attendanceMap}\n                setAttendanceMap={setAttendanceMap}\n                attendance={attendance}\n                roomNo={roomNo}\n              />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AttendanceTable;\n","G:\\Final Project\\UI\\src\\components\\analysisComponent.jsx",["190"],"import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"./loader\";\nimport Message from \"./message\";\nimport { CSVLink } from \"react-csv\";\n\nconst AnalysisComponent = () => {\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\n  const { loading, error, attendance } = attendanceAnalysis;\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  useEffect(() => {\n    if (attendance) {\n      setHeaders([\n        { label: \"Name\", key: \"name\" },\n        { label: \"Contact\", key: \"contact\" },\n        { label: \"Room No\", key: \"roomNo\" },\n        { label: \"Status\", key: \"attendance\" },\n      ]);\n      var csvMapList = [];\n      Object.entries(attendance.details).map((student) => {\n        var csvMap = {};\n        csvMap[\"name\"] = student[1].name;\n        csvMap[\"contact\"] = student[1].contact;\n        csvMap[\"roomNo\"] = student[1].roomNo;\n        csvMap[\"attendance\"] = attendance.data[student[0]];\n        csvMapList.push(csvMap);\n      });\n\n      setData(csvMapList);\n    }\n  }, [attendance]);\n  return (\n    <>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          {attendance && (\n            <>\n              <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Contact No</th>\n                    <th>Room No</th>\n                    <th>Attendance</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {attendance &&\n                    Object.entries(attendance.details).map((student) => {\n                      return (\n                        <tr key={student[0]}>\n                          <th>{student[1].name}</th>\n                          <td>{student[1].contact}</td>\n                          <td>{student[1].roomNo}</td>\n                          <td>{attendance.data[student[0]]}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </Table>\n              <CSVLink\n                data={data}\n                headers={headers}\n                filename={`attendance_${Date()\n                  .toString()\n                  .substring(0, 15)}.csv`}\n                className=\"btn btn-primary\"\n              >\n                Download\n              </CSVLink>\n              \n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AnalysisComponent;\n","G:\\Final Project\\UI\\src\\components\\searchBox.jsx",[],"G:\\Final Project\\UI\\src\\components\\student.jsx",[],"G:\\Final Project\\UI\\src\\constants\\studentConstant.jsx",[],"G:\\Final Project\\UI\\src\\constants\\attendanceConstant.jsx",[],"G:\\Final Project\\UI\\src\\constants\\userConstants.jsx",[],"G:\\Final Project\\UI\\src\\components\\attendanceTableComponent.jsx",["191"],"import React, { useEffect } from \"react\";\nimport { Table, Form, Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { postAttendance } from \"../actions/attendanceActions\";\nimport { Link } from \"react-router-dom\";\nconst AttendanceTableComponent = ({\n  students,\n  attendanceMap,\n  setAttendanceMap,\n  attendance,\n  roomNo,\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => { }, [dispatch, attendanceMap]);\n  const updateAttendance = () => {\n    if (attendance) {\n      if (!attendance.roomNo.includes(roomNo)) {\n        attendance.roomNo.push(roomNo);\n      }\n    }\n    const roomData = attendance ? attendance.roomNo : roomNo;\n    const dataData = attendanceMap;\n    const detailsData = attendance ? attendance.details : {};\n    students.map((student) => {\n      detailsData[student._id] = {\n        name: student.name,\n        contact: student.contact,\n        roomNo: student.roomNo,\n      };\n    });\n\n    dispatch(\n      postAttendance({\n        roomNo: roomData,\n        details: detailsData,\n        data: dataData,\n      })\n    );\n  };\n  return (\n    <>\n      <Table striped bordered hover responsive className=\"table-sm\">\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>Attendance</th>\n            <th>STATUS</th>\n            <th>CONTACT</th>\n            <th>CITY</th>\n          </tr>\n        </thead>\n        <tbody>\n          {students &&\n            students.map((student) => (\n              <>\n                <tr key={student._id}>\n                  <td>\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\n                  </td>\n                  <td>\n                    <Form>\n                      <Form.Group controlId=\"status\">\n                        <Form.Control\n                          as=\"select\"\n                          size=\"sm\"\n                          defaultValue={attendanceMap[student._id]}\n                          onChange={(e) => {\n                            var tempMap = attendanceMap;\n                            tempMap[student._id] = e.target.value;\n                            setAttendanceMap(tempMap);\n                          }}\n                        >\n                          <option> Present</option>\n                          <option> Absent</option>\n                          {/* <option>Hostel</option>\n                          <option>Home</option>\n                          <option>outside</option> */}\n                        </Form.Control>\n                      </Form.Group>\n                    </Form>\n                  </td>\n                  <td>\n                    <span\n                      style={{\n                        color:\n                          student.status === \"Outside\"\n                            ? \"red\"\n                            : student.status === \"Home\"\n                              ? \"blue\"\n                              : \"black\",\n                      }}\n                    >\n                      {student.status}\n                    </span>\n                  </td>\n                  <td>\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\n                  </td>\n                  <td>{student.city}</td>\n                </tr>\n              </>\n            ))}\n        </tbody>\n      </Table>\n      <Button variant=\"success\" onClick={updateAttendance}>\n        Update Attendance\n      </Button>\n    </>\n  );\n};\n\nexport default AttendanceTableComponent;\n",{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":35,"column":6,"nodeType":"198","endLine":35,"endColumn":27,"suggestions":"199"},{"ruleId":"196","severity":1,"message":"200","line":53,"column":6,"nodeType":"198","endLine":53,"endColumn":53,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"206","line":1,"column":27,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"202","severity":1,"message":"207","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"202","severity":1,"message":"208","line":2,"column":18,"nodeType":"204","messageId":"205","endLine":2,"endColumn":22},{"ruleId":"202","severity":1,"message":"209","line":3,"column":16,"nodeType":"204","messageId":"205","endLine":3,"endColumn":26},{"ruleId":"202","severity":1,"message":"210","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":21},{"ruleId":"202","severity":1,"message":"211","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":21},{"ruleId":"202","severity":1,"message":"212","line":5,"column":23,"nodeType":"204","messageId":"205","endLine":5,"endColumn":34},{"ruleId":"202","severity":1,"message":"213","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":20},{"ruleId":"202","severity":1,"message":"214","line":6,"column":22,"nodeType":"204","messageId":"205","endLine":6,"endColumn":35},{"ruleId":"202","severity":1,"message":"215","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":15},{"ruleId":"202","severity":1,"message":"216","line":8,"column":8,"nodeType":"204","messageId":"205","endLine":8,"endColumn":15},{"ruleId":"202","severity":1,"message":"217","line":9,"column":10,"nodeType":"204","messageId":"205","endLine":9,"endColumn":30},{"ruleId":"202","severity":1,"message":"218","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":25,"column":11,"nodeType":"221","endLine":25,"endColumn":173},{"ruleId":"219","severity":1,"message":"220","line":26,"column":11,"nodeType":"221","endLine":26,"endColumn":139},{"ruleId":"219","severity":1,"message":"220","line":27,"column":11,"nodeType":"221","endLine":27,"endColumn":180},{"ruleId":"222","severity":1,"message":"223","line":32,"column":51,"nodeType":"224","messageId":"225","endLine":32,"endColumn":53},{"ruleId":"196","severity":1,"message":"226","line":40,"column":6,"nodeType":"198","endLine":40,"endColumn":28,"suggestions":"227"},{"ruleId":"202","severity":1,"message":"228","line":2,"column":26,"nodeType":"204","messageId":"205","endLine":2,"endColumn":29},{"ruleId":"202","severity":1,"message":"229","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":19},{"ruleId":"202","severity":1,"message":"230","line":2,"column":33,"nodeType":"204","messageId":"205","endLine":2,"endColumn":38},{"ruleId":"202","severity":1,"message":"231","line":9,"column":10,"nodeType":"204","messageId":"205","endLine":9,"endColumn":17},{"ruleId":"202","severity":1,"message":"210","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":21},{"ruleId":"196","severity":1,"message":"232","line":19,"column":6,"nodeType":"198","endLine":19,"endColumn":37,"suggestions":"233"},{"ruleId":"196","severity":1,"message":"234","line":22,"column":6,"nodeType":"198","endLine":22,"endColumn":53,"suggestions":"235"},{"ruleId":"222","severity":1,"message":"223","line":27,"column":30,"nodeType":"224","messageId":"225","endLine":27,"endColumn":32},{"ruleId":"222","severity":1,"message":"223","line":36,"column":30,"nodeType":"224","messageId":"225","endLine":36,"endColumn":32},{"ruleId":"222","severity":1,"message":"223","line":22,"column":56,"nodeType":"224","messageId":"225","endLine":22,"endColumn":58},{"ruleId":"222","severity":1,"message":"223","line":24,"column":28,"nodeType":"224","messageId":"225","endLine":24,"endColumn":30},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'userInfo', and 'userLoading'. Either include them or remove the dependency array.","ArrayExpression",["238"],"React Hook useEffect has missing dependencies: 'history', 'status', and 'student'. Either include them or remove the dependency array.",["239"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'useHistory' is defined but never used.","'FormContainer' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'addStudent' is defined but never used.","'updateStudent' is defined but never used.","'Loading' is defined but never used.","'Message' is defined but never used.","'STUDENT_UPDATE_RESET' is defined but never used.","'Loader' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'idList' and 'startDate'. Either include them or remove the dependency array.",["240"],"'Col' is defined but never used.","'Container' is defined but never used.","'Image' is defined but never used.","'Menubar' is defined but never used.","React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has a missing dependency: 'arrangeTable'. Either include it or remove the dependency array.",["242"],"no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},"Update the dependencies array to be: [dispatch, history, keyword, pageNumber, userInfo, userLoading]",{"range":"253","text":"254"},"Update the dependencies array to be: [dispatch, match, successUpdate, successDelete, student, status, history]",{"range":"255","text":"256"},"Update the dependencies array to be: [attendance, dispatch, idList, startDate]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, keyword, pageNumber, students]",{"range":"259","text":"260"},"Update the dependencies array to be: [dispatch, attendance, attendanceMap, students, arrangeTable]",{"range":"261","text":"262"},[1116,1137],"[dispatch, history, keyword, pageNumber, userInfo, userLoading]",[1495,1542],"[dispatch, match, successUpdate, successDelete, student, status, history]",[1402,1424],"[attendance, dispatch, idList, startDate]",[702,733],"[dispatch, keyword, pageNumber, students]",[780,827],"[dispatch, attendance, attendanceMap, students, arrangeTable]"]